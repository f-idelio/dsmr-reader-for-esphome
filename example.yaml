esphome:
  name: smartmeter
  platform: ESP8266
  board: esp01_1m

  # Delay the setup of the WiFi connection, to give the capacitors a chance
  # to charge. This charge is required to handle the power peak as caused
  # by the WiFi setup.
  on_boot:
    priority: 500
    then:
      - lambda: |-
           delay(5000);
           
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

api:
  password: !secret api_password

ota:
  password: !secret ota_password

# Baud rate 0 disables the serial logging, which is required to prevent
# conflicts with the serial communication of the uart component.
logger:
  baud_rate: 0
  level: VERBOSE
  
uart:
  rx_pin: GPIO3
  baud_rate: 115200

dsmr:

# The following are the sensors that I use.
# Look at the ESPHome documentation for the dsmr component for more options:
# https://esphome.io/components/sensor/dsmr.html

sensor:
  - platform: dsmr
    energy_delivered_tariff1:
      name: DSMR Energy Consumed Tariff 1
    energy_delivered_tariff2:
      name: DSMR Energy Consumed Tariff 2
    power_delivered:
      name: DSMR Power Consumed
    electricity_failures:
      name: DSMR Electricity Failures
    electricity_long_failures:
      name: DSMR Electricity Long Failures
    current_l1:
      name: DSMR Current Phase 1
    voltage_l1:
      name: DSMR Voltage Phase 1
    gas_delivered:
      name: DSMR Gas Consumed

text_sensor:
  - platform: dsmr
    identification:
      name: "DSMR Identification"
    p1_version:
      name: "DSMR Version"
